{"version":3,"sources":["assets/PapelDeParede1.jpg","components/BackgroundContainer.tsx","components/Header.tsx","components/HeaderComponents/MenuButton.tsx","components/HeaderComponents/MenuGroup.tsx","components/TaskListComponents/TaskListHeader.tsx","components/TaskListComponents/TaskListContainer.tsx","hooks/useDrag.tsx","components/TaskListComponents/Card.tsx","components/TaskList.tsx","components/Draggable/DraggableCanvas.tsx","Pages/Main.tsx","serviceWorker.ts","index.tsx","App.tsx"],"names":["module","exports","StyledDiv","styled","div","props","background","BackgroundContainer","children","StyledMenu","Header","StyledMenuButton","button","MenuButton","StyledMenuGroup","MenuGroup","StyledTaskListHeader","StyledMdMoreHoriz","MdMoreHoriz","TaskListHeader","title","StyledTaskListContainer","TaskListContainer","useDrag","useState","isOnMovement","setIsOnMovement","x","y","position","setPosition","componentRef","useRef","setFromEvent","e","clientX","clientY","componentProps","onMouseDown","window","addEventListener","stopPropagation","onMouseUp","removeEventListener","ref","style","top","left","console","log","StyledCard","Card","StyledTaskList","draging","TaskList","StyledDraggableCanvas","grid","DraggableCanvas","childList","length","StyledFaHome","FaHome","StyledFaTrello","FaTrello","StyledFiPlus","FiPlus","StyledFaInfoCircle","MdInfoOutline","StyledMdNotificationsNone","MdNotificationsNone","StyledH2","h2","img","width","height","key","Boolean","location","hostname","match","ReactDOM","render","Main","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.487b410f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/PapelDeParede1.2879accc.jpg\";","import * as React from 'react';\nimport styled from 'styled-components';\n\ninterface IBackgroundContainerProps extends React.HTMLAttributes<HTMLDivElement> {\n    background?: string,\n}\n\nconst StyledDiv = styled.div<IBackgroundContainerProps>`\n    background-image: url(${(props) => props.background});\n    background-size: cover;\n    overflow: hidden;\n`\n\nexport const BackgroundContainer: React.FC<IBackgroundContainerProps> = (props:IBackgroundContainerProps) => {\n\n    return (\n        <StyledDiv {...props}>\n            {props.children}\n        </StyledDiv>\n    )\n}","import * as React from 'react'\nimport styled from 'styled-components'\n\ninterface IHeaderProps extends React.HTMLAttributes<HTMLDivElement> {\n\n}\n\nconst StyledMenu = styled.div<IHeaderProps>`\n    width: 100%;\n    height: 35px;\n    background-color: rgba(50,50,50,0.4);\n    /* position: fixed; */\n    top: 0px;\n    left: 0px;\n    padding: 3px;\n    display: flex;\n    justify-content: space-between;\n`\n\nexport const Header:React.FC<IHeaderProps> = (props:IHeaderProps) => {\n    return (\n        <StyledMenu>\n            {props.children}\n        </StyledMenu>\n    )\n}","import * as  React from 'react'\nimport styled from 'styled-components'\n\ninterface IMenuButtonProps extends React.HtmlHTMLAttributes<HTMLButtonElement> {\n\n}\n\nconst StyledMenuButton = styled.button<IMenuButtonProps>`\n    border: none;\n    border-radius: 3px;\n    background-color: rgba(255,255,255,0.4);\n    margin-right: 3px;\n    height: 100%;\n    padding: 3px;\n    cursor: pointer;\n    color: white;\n    display: flex;\n    align-items: center;\n\n    & > span{\n        margin-left: 4px;\n        font-weight: bold;\n    }\n\n    &:hover{\n        filter: brightness(80%)\n    }\n`\n\nexport const MenuButton:React.FC<IMenuButtonProps> = (props: IMenuButtonProps) => {\n    return (\n        <StyledMenuButton>\n            {props.children}\n        </StyledMenuButton>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledMenuGroup = styled.div`\n    display: flex;\n\n`\n\nexport const MenuGroup = (props:React.HTMLAttributes<HTMLDivElement>) => {\n    return (\n        <StyledMenuGroup>\n            {props.children}\n        </StyledMenuGroup>\n    )\n}\n","\nimport React from 'react'\nimport styled from 'styled-components'\nimport {MdMoreHoriz} from 'react-icons/md'\ninterface ITaskListHeaderProps extends React.HTMLAttributes<HTMLDivElement>{\n    title: string,\n}\n\n\nconst StyledTaskListHeader = styled.div`\n    display: flex;\n    justify-content: space-between;\n    font-size: 0.9em;\n    margin: 4px;\n    align-items: center;\n    font-weight: 500;\n    color: #02025f;\n`\n\nconst StyledMdMoreHoriz = styled(MdMoreHoriz)`\n    color: #02025f;\n`\n\nexport const TaskListHeader = (props:ITaskListHeaderProps) => {\n    return (\n        <StyledTaskListHeader>\n            {props.title}\n            <StyledMdMoreHoriz/>\n        </StyledTaskListHeader>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface ITaskListContainerProps extends React.HTMLAttributes<HTMLDivElement>{\n\n}\n\nconst StyledTaskListContainer = styled.div`\n   width: 100%;\n`\n\n\nexport const TaskListContainer = (props:ITaskListContainerProps) => {\n    return (\n        <StyledTaskListContainer>\n            {props.children}\n        </StyledTaskListContainer>\n    )\n}\n","import React, { useState, useRef } from 'react'\nimport Coord from '../components/Draggable/Cord';\n\n/*\n * Hook to dragable components\n*/\nexport const useDrag = () => {\n    const [isOnMovement, setIsOnMovement] = useState(false);\n    const [position, setPosition] = useState({x:-1, y:-1} as Coord);\n    const componentRef = useRef({} as HTMLDivElement)\n\n    const setFromEvent = (e: MouseEvent) => {\n        setPosition({ x: e.clientX, y: e.clientY });\n    };\n\n    const mouseDownHandler = (e: React.MouseEvent<HTMLDivElement>) => {\n        if (!isOnMovement) {\n            setIsOnMovement(true);\n            window.addEventListener(\"mousemove\", setFromEvent);\n            // console.log(componentRef)\n            e.stopPropagation()\n        }\n    }\n    const mouseUpHandler = (e: React.MouseEvent<HTMLDivElement>) => {\n        if (isOnMovement) {\n            setIsOnMovement(false);\n            // console.log(\"up\")\n            window.removeEventListener(\"mousemove\", setFromEvent);\n            // e.preventDefault();\n            e.stopPropagation()\n        }\n    }\n\n    const componentProps = {\n        onMouseDown: mouseDownHandler,\n        onMouseUp: mouseUpHandler,\n        position,\n        isOnMovement,\n        ref: componentRef,\n        style: (isOnMovement ? {\n            top: position.y - 10,\n            left: position.x - 10\n        } : {})\n    };\n    console.log(componentProps)\n    return {componentProps}\n}","import React, { useRef, HtmlHTMLAttributes } from 'react'\nimport styled from 'styled-components'\nimport { useDrag } from '../../hooks/useDrag'\nimport { Draggable } from '../Draggable/Draggable'\n\ninterface ICardProps extends React.HTMLAttributes<HTMLDivElement> {\n\n}\n\n\nconst StyledCard = styled.div<{\n    isOnMovement: boolean\n}>`\n    background-color: white;\n    border-radius: 4px;\n    padding: 4px;\n    box-shadow: grey 1px 1px 2px 0px;\n    position: ${(props) => props.isOnMovement ? 'absolute' : 'relative'};\n    height: fit-content;\n    cursor: ${(props) => props.isOnMovement ? 'grab' : 'pointer'};\n`\n\nexport const Card = (props: ICardProps) => {\n    const { componentProps } = useDrag()\n    \n    return (\n        <StyledCard\n            {...componentProps}\n        >\n            {props.children}\n        </StyledCard>\n    )\n}\n","\nimport React from 'react'\nimport styled from 'styled-components'\nimport { TaskListHeader } from \"./TaskListComponents\";\nimport { TaskListContainer } from './TaskListComponents/TaskListContainer';\nimport { Card } from './TaskListComponents/Card';\nimport { Draggable } from './Draggable/Draggable';\nimport { useDrag } from '../hooks/useDrag';\n// import Draggable from 'react-draggable';\n\ninterface IPropsTaskList extends React.HTMLAttributes<HTMLDivElement> {\n    title: string;\n}\n\nconst StyledTaskList = styled.div<{\n    draging?: boolean\n}>`\n    background-color: #ddd;\n    width: 250px;\n    min-height: 100px;\n    // margin: 10px;\n    border-radius: 4px;\n    padding: 6px;\n    position: absolute;\n    ${(props) => props.draging?' transform: rotate(5deg);':''}\n`;\n\n\n\n\n\nexport const TaskList: React.FC<IPropsTaskList> = (props: IPropsTaskList) => {\n    const {componentProps} = useDrag();\n    return (\n            <StyledTaskList\n                {...componentProps}\n                draging={componentProps.isOnMovement}\n            >\n                <TaskListHeader title={props.title}></TaskListHeader>\n                <TaskListContainer>\n                    <Card>\n                        Teste\n                    </Card>\n                </TaskListContainer>\n            </StyledTaskList>\n        \n    )\n}\n","import React, { ReactNode, ReactNodeArray } from 'react'\nimport styled from 'styled-components'\nimport { Draggable } from './Draggable';\nimport HashMap from './HashMap';\nimport { FiCornerDownLeft } from 'react-icons/fi';\nimport { useDragCanvas } from '../../hooks/useDragCanvas';\n\ninterface IDraggableCanvasProps extends React.HTMLAttributes<HTMLDivElement> {\n    grid?: [number, number]\n}\n\nconst StyledDraggableCanvas = styled.div<{\n    grid?: [number, number]\n}>`\n    ${(props) => {\n        if (props.grid) {\n            return `\n                display: grid;\n                grid-template-columns: repeat(${props.grid[0]}, 250px);\n                grid-template-rows: repeat(${props.grid[1]}, 250px);\n                grid-column-gap: 20px;\n            `\n        }\n    }}\n    width: 100fr;\n    height: 100%;\n    overflow-x: scroll;\n    overflow-y: hidden;\n    margin: 10px;\n`;\n\n\n\nexport const DraggableCanvas: React.FC<IDraggableCanvasProps> = (props: IDraggableCanvasProps) => {\n    const childList = props.children as Array<Node>\n    return (\n        <StyledDraggableCanvas grid={[(childList && childList.length) || 1 , 1]} {...props}>\n            {childList && childList}\n        </StyledDraggableCanvas>\n    )\n}\n","import * as React from 'react'\n\nimport img from '../assets/PapelDeParede1.jpg'\nimport { BackgroundContainer } from '../components/BackgroundContainer';\nimport { Header } from '../components/Header';\nimport { MenuButton, MenuGroup } from '../components/HeaderComponents';\nimport { FaHome, FaTrello, FaPlus } from 'react-icons/fa';\nimport { MdNotificationsNone, MdInfoOutline } from 'react-icons/md';\nimport { FiPlus } from 'react-icons/fi';\nimport styled from 'styled-components';\nimport { TaskList } from '../components/TaskList';\nimport { DraggableCanvas } from '../components/Draggable/DraggableCanvas';\nimport { Draggable } from '../components/Draggable/Draggable';\n\n\nconst StyledFaHome = styled(FaHome)`\n    width: 23px;\n    height: 100%;\n    color: white;\n`\nconst StyledFaTrello = styled(FaTrello)`\n    width: 16px;\n    height: 100%;\n    color: white;\n`\n\nconst StyledFiPlus = styled(FiPlus)`\n    width: 23px;\n    height: 100%;\n    color: white;\n`\n\nconst StyledFaInfoCircle = styled(MdInfoOutline)`\n    width: 23px;\n    height: 100%;\n    color: white;\n`;\n\nconst StyledMdNotificationsNone = styled(MdNotificationsNone)`\n    width: 23px;\n    height: 100%;\n    color: white;\n`;\n\nconst StyledMenuButton = styled(MenuButton)`\n    background-color: \n    !important;\n`;\n\nconst StyledH2 = styled.h2`\n    font-family: 'Segoe Script';\n    font-style: italic;\n    color: white;\n    line-height: 30px;\n    display: inline;\n    margin-left: 4px;\n`\n\nconst StyledContainer = styled.div`\n    display: flex;\n`\n\n// const canvas = DraggableCanvas(MenuButton)\n\nexport default (props: React.HTMLAttributes<HTMLDivElement>) => {\n    return (\n        <BackgroundContainer background={img} style={{ width: '100vw', height: '100vh' }}>\n            <Header>\n                <MenuGroup>\n                    <MenuButton> <StyledFaHome /> </MenuButton>\n                    <MenuButton> <StyledFaTrello /> <span>Quadros</span> </MenuButton>\n\n                </MenuGroup>\n                <MenuGroup>\n                    <StyledFaTrello /><StyledH2>ICard</StyledH2>\n                </MenuGroup>\n                <MenuGroup>\n                    <MenuButton><StyledFiPlus /></MenuButton>\n                    <MenuButton><StyledFaInfoCircle /></MenuButton>\n                    <StyledMenuButton><StyledMdNotificationsNone /></StyledMenuButton>\n                </MenuGroup>\n            </Header>\n\n            <DraggableCanvas>\n                <TaskList title=\"Backlog\" key={1}>\n\n                </TaskList>\n                <TaskList title=\"Active\" key={2}>\n\n                </TaskList>\n                <TaskList title=\"Closed\" key={3}>\n\n                </TaskList>\n            </DraggableCanvas>\n        </BackgroundContainer>\n    )\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import * as React from 'react'\nimport Main from './Pages/Main';\n\n\nexport const App:React.FC<any> = (props) => {\n\n    return <Main/>\n}"],"sourceRoot":""}